// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raftgrp.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// message
type Metadata struct {
	GroupId              int64    `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_raftgrp_081e51f8ac704458, []int{0}
}
func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (dst *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(dst, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

type Playload struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Playload) Reset()         { *m = Playload{} }
func (m *Playload) String() string { return proto.CompactTextString(m) }
func (*Playload) ProtoMessage()    {}
func (*Playload) Descriptor() ([]byte, []int) {
	return fileDescriptor_raftgrp_081e51f8ac704458, []int{1}
}
func (m *Playload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Playload.Unmarshal(m, b)
}
func (m *Playload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Playload.Marshal(b, m, deterministic)
}
func (dst *Playload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Playload.Merge(dst, src)
}
func (m *Playload) XXX_Size() int {
	return xxx_messageInfo_Playload.Size(m)
}
func (m *Playload) XXX_DiscardUnknown() {
	xxx_messageInfo_Playload.DiscardUnknown(m)
}

var xxx_messageInfo_Playload proto.InternalMessageInfo

func (m *Playload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// FIXME: use stream to send this
type SendRequest struct {
	// Types that are valid to be assigned to Msg:
	//	*SendRequest_Meta
	//	*SendRequest_Payload
	Msg                  isSendRequest_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SendRequest) Reset()         { *m = SendRequest{} }
func (m *SendRequest) String() string { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()    {}
func (*SendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_raftgrp_081e51f8ac704458, []int{2}
}
func (m *SendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRequest.Unmarshal(m, b)
}
func (m *SendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRequest.Marshal(b, m, deterministic)
}
func (dst *SendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRequest.Merge(dst, src)
}
func (m *SendRequest) XXX_Size() int {
	return xxx_messageInfo_SendRequest.Size(m)
}
func (m *SendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRequest proto.InternalMessageInfo

type isSendRequest_Msg interface {
	isSendRequest_Msg()
}

type SendRequest_Meta struct {
	Meta *Metadata `protobuf:"bytes,1,opt,name=meta,proto3,oneof"`
}
type SendRequest_Payload struct {
	Payload *Playload `protobuf:"bytes,2,opt,name=payload,proto3,oneof"`
}

func (*SendRequest_Meta) isSendRequest_Msg()    {}
func (*SendRequest_Payload) isSendRequest_Msg() {}

func (m *SendRequest) GetMsg() isSendRequest_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *SendRequest) GetMeta() *Metadata {
	if x, ok := m.GetMsg().(*SendRequest_Meta); ok {
		return x.Meta
	}
	return nil
}

func (m *SendRequest) GetPayload() *Playload {
	if x, ok := m.GetMsg().(*SendRequest_Payload); ok {
		return x.Payload
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SendRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SendRequest_OneofMarshaler, _SendRequest_OneofUnmarshaler, _SendRequest_OneofSizer, []interface{}{
		(*SendRequest_Meta)(nil),
		(*SendRequest_Payload)(nil),
	}
}

func _SendRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SendRequest)
	// msg
	switch x := m.Msg.(type) {
	case *SendRequest_Meta:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Meta); err != nil {
			return err
		}
	case *SendRequest_Payload:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Payload); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SendRequest.Msg has unexpected type %T", x)
	}
	return nil
}

func _SendRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SendRequest)
	switch tag {
	case 1: // msg.meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Metadata)
		err := b.DecodeMessage(msg)
		m.Msg = &SendRequest_Meta{msg}
		return true, err
	case 2: // msg.payload
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Playload)
		err := b.DecodeMessage(msg)
		m.Msg = &SendRequest_Payload{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SendRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SendRequest)
	// msg
	switch x := m.Msg.(type) {
	case *SendRequest_Meta:
		s := proto.Size(x.Meta)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SendRequest_Payload:
		s := proto.Size(x.Payload)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ACK struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Detail               string   `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ACK) Reset()         { *m = ACK{} }
func (m *ACK) String() string { return proto.CompactTextString(m) }
func (*ACK) ProtoMessage()    {}
func (*ACK) Descriptor() ([]byte, []int) {
	return fileDescriptor_raftgrp_081e51f8ac704458, []int{3}
}
func (m *ACK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ACK.Unmarshal(m, b)
}
func (m *ACK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ACK.Marshal(b, m, deterministic)
}
func (dst *ACK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ACK.Merge(dst, src)
}
func (m *ACK) XXX_Size() int {
	return xxx_messageInfo_ACK.Size(m)
}
func (m *ACK) XXX_DiscardUnknown() {
	xxx_messageInfo_ACK.DiscardUnknown(m)
}

var xxx_messageInfo_ACK proto.InternalMessageInfo

func (m *ACK) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ACK) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

type SendReply struct {
	Ack                  *ACK     `protobuf:"bytes,1,opt,name=ack,proto3" json:"ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendReply) Reset()         { *m = SendReply{} }
func (m *SendReply) String() string { return proto.CompactTextString(m) }
func (*SendReply) ProtoMessage()    {}
func (*SendReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_raftgrp_081e51f8ac704458, []int{4}
}
func (m *SendReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendReply.Unmarshal(m, b)
}
func (m *SendReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendReply.Marshal(b, m, deterministic)
}
func (dst *SendReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendReply.Merge(dst, src)
}
func (m *SendReply) XXX_Size() int {
	return xxx_messageInfo_SendReply.Size(m)
}
func (m *SendReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendReply proto.InternalMessageInfo

func (m *SendReply) GetAck() *ACK {
	if m != nil {
		return m.Ack
	}
	return nil
}

// snapshot
type SnapshotReaderRequest struct {
	GroupId              int64    `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Parter               []byte   `protobuf:"bytes,2,opt,name=parter,proto3" json:"parter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotReaderRequest) Reset()         { *m = SnapshotReaderRequest{} }
func (m *SnapshotReaderRequest) String() string { return proto.CompactTextString(m) }
func (*SnapshotReaderRequest) ProtoMessage()    {}
func (*SnapshotReaderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_raftgrp_081e51f8ac704458, []int{5}
}
func (m *SnapshotReaderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotReaderRequest.Unmarshal(m, b)
}
func (m *SnapshotReaderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotReaderRequest.Marshal(b, m, deterministic)
}
func (dst *SnapshotReaderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotReaderRequest.Merge(dst, src)
}
func (m *SnapshotReaderRequest) XXX_Size() int {
	return xxx_messageInfo_SnapshotReaderRequest.Size(m)
}
func (m *SnapshotReaderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotReaderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotReaderRequest proto.InternalMessageInfo

func (m *SnapshotReaderRequest) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *SnapshotReaderRequest) GetParter() []byte {
	if m != nil {
		return m.Parter
	}
	return nil
}

type Chunk struct {
	Chunk                []byte   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_raftgrp_081e51f8ac704458, []int{6}
}
func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (dst *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(dst, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type SnapshotResponse struct {
	Chunk                *Chunk   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotResponse) Reset()         { *m = SnapshotResponse{} }
func (m *SnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*SnapshotResponse) ProtoMessage()    {}
func (*SnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_raftgrp_081e51f8ac704458, []int{7}
}
func (m *SnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotResponse.Unmarshal(m, b)
}
func (m *SnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotResponse.Marshal(b, m, deterministic)
}
func (dst *SnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotResponse.Merge(dst, src)
}
func (m *SnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_SnapshotResponse.Size(m)
}
func (m *SnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotResponse proto.InternalMessageInfo

func (m *SnapshotResponse) GetChunk() *Chunk {
	if m != nil {
		return m.Chunk
	}
	return nil
}

func init() {
	proto.RegisterType((*Metadata)(nil), "proto.Metadata")
	proto.RegisterType((*Playload)(nil), "proto.Playload")
	proto.RegisterType((*SendRequest)(nil), "proto.SendRequest")
	proto.RegisterType((*ACK)(nil), "proto.ACK")
	proto.RegisterType((*SendReply)(nil), "proto.SendReply")
	proto.RegisterType((*SnapshotReaderRequest)(nil), "proto.SnapshotReaderRequest")
	proto.RegisterType((*Chunk)(nil), "proto.Chunk")
	proto.RegisterType((*SnapshotResponse)(nil), "proto.SnapshotResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RaftGrouperClient is the client API for RaftGrouper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftGrouperClient interface {
	// Sends a raft message to peer
	Send(ctx context.Context, opts ...grpc.CallOption) (RaftGrouper_SendClient, error)
	// snapshot reader
	SnapshotRead(ctx context.Context, in *SnapshotReaderRequest, opts ...grpc.CallOption) (RaftGrouper_SnapshotReadClient, error)
}

type raftGrouperClient struct {
	cc *grpc.ClientConn
}

func NewRaftGrouperClient(cc *grpc.ClientConn) RaftGrouperClient {
	return &raftGrouperClient{cc}
}

func (c *raftGrouperClient) Send(ctx context.Context, opts ...grpc.CallOption) (RaftGrouper_SendClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RaftGrouper_serviceDesc.Streams[0], "/proto.RaftGrouper/Send", opts...)
	if err != nil {
		return nil, err
	}
	x := &raftGrouperSendClient{stream}
	return x, nil
}

type RaftGrouper_SendClient interface {
	Send(*SendRequest) error
	CloseAndRecv() (*SendReply, error)
	grpc.ClientStream
}

type raftGrouperSendClient struct {
	grpc.ClientStream
}

func (x *raftGrouperSendClient) Send(m *SendRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *raftGrouperSendClient) CloseAndRecv() (*SendReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *raftGrouperClient) SnapshotRead(ctx context.Context, in *SnapshotReaderRequest, opts ...grpc.CallOption) (RaftGrouper_SnapshotReadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RaftGrouper_serviceDesc.Streams[1], "/proto.RaftGrouper/SnapshotRead", opts...)
	if err != nil {
		return nil, err
	}
	x := &raftGrouperSnapshotReadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RaftGrouper_SnapshotReadClient interface {
	Recv() (*SnapshotResponse, error)
	grpc.ClientStream
}

type raftGrouperSnapshotReadClient struct {
	grpc.ClientStream
}

func (x *raftGrouperSnapshotReadClient) Recv() (*SnapshotResponse, error) {
	m := new(SnapshotResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RaftGrouperServer is the server API for RaftGrouper service.
type RaftGrouperServer interface {
	// Sends a raft message to peer
	Send(RaftGrouper_SendServer) error
	// snapshot reader
	SnapshotRead(*SnapshotReaderRequest, RaftGrouper_SnapshotReadServer) error
}

func RegisterRaftGrouperServer(s *grpc.Server, srv RaftGrouperServer) {
	s.RegisterService(&_RaftGrouper_serviceDesc, srv)
}

func _RaftGrouper_Send_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RaftGrouperServer).Send(&raftGrouperSendServer{stream})
}

type RaftGrouper_SendServer interface {
	SendAndClose(*SendReply) error
	Recv() (*SendRequest, error)
	grpc.ServerStream
}

type raftGrouperSendServer struct {
	grpc.ServerStream
}

func (x *raftGrouperSendServer) SendAndClose(m *SendReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *raftGrouperSendServer) Recv() (*SendRequest, error) {
	m := new(SendRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RaftGrouper_SnapshotRead_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SnapshotReaderRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RaftGrouperServer).SnapshotRead(m, &raftGrouperSnapshotReadServer{stream})
}

type RaftGrouper_SnapshotReadServer interface {
	Send(*SnapshotResponse) error
	grpc.ServerStream
}

type raftGrouperSnapshotReadServer struct {
	grpc.ServerStream
}

func (x *raftGrouperSnapshotReadServer) Send(m *SnapshotResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _RaftGrouper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RaftGrouper",
	HandlerType: (*RaftGrouperServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Send",
			Handler:       _RaftGrouper_Send_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "SnapshotRead",
			Handler:       _RaftGrouper_SnapshotRead_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "raftgrp.proto",
}

func init() { proto.RegisterFile("raftgrp.proto", fileDescriptor_raftgrp_081e51f8ac704458) }

var fileDescriptor_raftgrp_081e51f8ac704458 = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x5d, 0x4f, 0xc2, 0x30,
	0x14, 0x86, 0x37, 0xc7, 0xf8, 0x38, 0x9b, 0x91, 0x9c, 0xf8, 0x81, 0x04, 0x8d, 0x69, 0x42, 0x82,
	0x31, 0x21, 0x88, 0x89, 0xf7, 0xc8, 0x85, 0x20, 0x31, 0x31, 0xe5, 0x07, 0x98, 0x4a, 0xcb, 0x47,
	0x18, 0x5b, 0xed, 0xca, 0x05, 0x7f, 0xc1, 0x5f, 0x6d, 0xd6, 0x75, 0x11, 0xa2, 0x5e, 0xed, 0x9c,
	0x9e, 0x77, 0xe7, 0x79, 0xdf, 0x16, 0x8e, 0x15, 0x9b, 0xeb, 0x85, 0x92, 0x5d, 0xa9, 0x12, 0x9d,
	0xa0, 0x6f, 0x3e, 0xa4, 0x0d, 0xd5, 0x57, 0xa1, 0x19, 0x67, 0x9a, 0xe1, 0x25, 0x54, 0x17, 0x2a,
	0xd9, 0xca, 0xf7, 0x15, 0x6f, 0xb8, 0x37, 0x6e, 0xc7, 0xa3, 0x15, 0xd3, 0x8f, 0x39, 0xb9, 0x86,
	0xea, 0x5b, 0xc4, 0x76, 0x51, 0xc2, 0x38, 0x22, 0x94, 0x32, 0xb9, 0x91, 0x84, 0xd4, 0xd4, 0x64,
	0x09, 0xc1, 0x54, 0xc4, 0x9c, 0x8a, 0xcf, 0xad, 0x48, 0x35, 0xb6, 0xa1, 0xb4, 0x11, 0x56, 0x12,
	0xf4, 0x4f, 0x72, 0x64, 0xb7, 0x00, 0x8d, 0x1c, 0x6a, 0xc6, 0x78, 0x07, 0x15, 0x99, 0x2f, 0x6d,
	0x1c, 0x1d, 0x28, 0x0b, 0xd6, 0xc8, 0xa1, 0x85, 0xe2, 0xc9, 0x07, 0x6f, 0x93, 0x2e, 0xc8, 0x3d,
	0x78, 0x83, 0xe1, 0x24, 0x33, 0x31, 0x4b, 0xb8, 0xb0, 0x3e, 0x4d, 0x8d, 0xe7, 0x50, 0xe6, 0x42,
	0xb3, 0x55, 0x64, 0xb6, 0xd5, 0xa8, 0xed, 0xc8, 0x2d, 0xd4, 0x72, 0x73, 0x32, 0xda, 0x61, 0x0b,
	0x3c, 0x36, 0x5b, 0x5b, 0x67, 0x60, 0x79, 0x83, 0xe1, 0x84, 0x66, 0xc7, 0xe4, 0x05, 0xce, 0xa6,
	0x31, 0x93, 0xe9, 0x32, 0xd1, 0x54, 0x30, 0x2e, 0x54, 0x91, 0xe8, 0xff, 0xbb, 0xc9, 0xb0, 0x92,
	0x29, 0x2d, 0x94, 0xc1, 0x86, 0xd4, 0x76, 0xe4, 0x0a, 0xfc, 0xe1, 0x72, 0x1b, 0xaf, 0xf1, 0x14,
	0xfc, 0x59, 0x56, 0xd8, 0x1b, 0xcb, 0x1b, 0xf2, 0x08, 0xf5, 0x1f, 0x54, 0x2a, 0x93, 0x38, 0x15,
	0x48, 0xf6, 0x95, 0x41, 0x3f, 0xb4, 0xf6, 0xcc, 0x1a, 0xfb, 0x5f, 0xff, 0xcb, 0x85, 0x80, 0xb2,
	0xb9, 0x7e, 0xce, 0xf0, 0x42, 0x61, 0x0f, 0x4a, 0x59, 0x3a, 0x44, 0x2b, 0xde, 0x7b, 0x87, 0x66,
	0xfd, 0xe0, 0x4c, 0x46, 0x3b, 0xe2, 0x74, 0x5c, 0x1c, 0x43, 0xb8, 0x1f, 0x12, 0x5b, 0x85, 0xea,
	0xaf, 0xe4, 0xcd, 0x8b, 0x5f, 0xd3, 0xdc, 0x2c, 0x71, 0x7a, 0xee, 0x47, 0xd9, 0xcc, 0x1e, 0xbe,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xaa, 0xb6, 0xa2, 0x93, 0x5d, 0x02, 0x00, 0x00,
}
